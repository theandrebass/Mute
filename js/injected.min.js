"use strict";var $=document.querySelector.bind(document),$$=document.querySelectorAll.bind(document),MuteUtils={eventAdder:function(t,e,n){for(var r=$$(t)||[],o=r.length,c=0;c<o;c++)r[c].addEventListener(e,n);return r},extendObject:function(t,e){return Object.keys(e).forEach(function(n){t[n]=e[n]}),t},getLocation:function(t){var e=t.getBoundingClientRect();return extendObject(e,{width:e.right-e.left,height:e.bottom-e.top}),e},nodeListToArray:function(t){return Array.prototype.slice.call(t)}};
"use strict";function getMuteVideos(){return MuteUtils.nodeListToArray($$("video"))}function muteVideoElement(e){e.volume=0,e.muted=!0,setTimeout(function(){e.volume=0,e.muted=!0},500),setTimeout(function(){e.volume=0,e.muted=!0},1e3)}function stopVideoElement(e){muteVideoElement(e),setTimeout(function(){e.pause(),e.volume=1},500)}function settingsToActions(e){e.willRun>-1||getMuteVideos().forEach(function(t){switch(e.muteMode){case 0:muteVideoElement(t);break;case 1:stopVideoElement(t)}})}function processDOM(e,t,o){var n=void 0,i=void 0;void 0!==e&&void 0!==t&&void 0!==o?(n=e.exemptDomains instanceof Array&&e.exemptDomains.indexOf(document.domain),i=e.muteMode,settingsToActions({willRun:n,muteMode:i})):chrome.storage.sync.get({muteMode:0,exemptDomains:[]},function(e){n=e.exemptDomains instanceof Array&&e.exemptDomains.indexOf(document.domain),i=e.muteMode,settingsToActions({willRun:n,muteMode:i})})}document.addEventListener("DOMContentLoaded",processDOM),window.addEventListener("load",function(){setTimeout(processDOM,1e3)}),chrome.runtime.onMessage.addListener(processDOM);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIiwiaW5qZWN0ZWQuanMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImJpbmQiLCIkJCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJNdXRlVXRpbHMiLCJzZWxlY3RvciIsImV2ZW50TmFtZSIsImNhbGxiYWNrIiwidExlbmd0aCIsInRhcmdldHMiLCJldmVudEFkZGVyIiwibGVuZ3RoIiwiaSIsImFkZEV2ZW50TGlzdGVuZXIiLCJleHRlbmRPYmplY3QiLCJvYmoiLCJlbCIsImZvckVhY2giLCJrZXkiLCJnZXRMb2NhdGlvbiIsImJvdW5kaW5nQ2xpZW50UmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImxlZnQiLCJ3aWR0aCIsInJpZ2h0Iiwibm9kZUxpc3RUb0FycmF5Iiwibm9kZUxpc3QiLCJBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwiY2FsbCIsImdldE11dGVWaWRlb3MiLCJtdXRlVmlkZW9FbGVtZW50Iiwidm9sdW1lIiwibXV0ZWQiLCJzZXRUaW1lb3V0Iiwic3RvcFZpZGVvRWxlbWVudCIsInNldHRpbmdzVG9BY3Rpb25zIiwib3B0aW9ucyIsIndpbGxSdW4iLCJtdXRlTW9kZSIsInByb2Nlc3NET00iLCJyZXF1ZXN0Iiwic2VuZGVyIiwicmVzcG9uc2UiLCJ1bmRlZmluZWQiLCJleGVtcHREb21haW5zIiwiaW5kZXhPZiIsImRvbWFpbiIsImNocm9tZSIsInN0b3JhZ2UiLCJzeW5jIiwiZ2V0IiwicmVjb3JkIiwid2luZG93IiwicnVudGltZSIsIm9uTWVzc2FnZSIsImFkZExpc3RlbmVyIl0sIm1hcHBpbmdzIjoiWUFBQSxJQUFJQSxHQUFJQyxTQUFTQyxjQUFjQyxLQUFLRixVQUNoQ0csR0FBS0gsU0FBU0ksaUJBQWlCRixLQUFLRixVQUFwQ0csV0FFQUUsV0FBWSxTQUFBQyxFQUFBQyxFQUFBQyxHQUdSLElBQ0lDLEdBREFDLEdBQVVQLEdBQUdHLE9BRHJCSyxFQUFZRCxFQUFBRSxPQUVKSCxFQUFBQSxFQUFVQyxFQUFBQSxFQURkRyxJQUlJSCxFQUFRRyxHQUFHQyxpQkFBaUJQLEVBQVdDLEVBQzFDLE9BQUFFLElBR0pLLGFBWFcsU0FBQUMsRUFBQUMsR0FpQlAsTUFKTEYsUUFBQUEsS0FBY0UsR0FBQUMsUUFBQSxTQUFTRixHQUdmQSxFQUFJRyxHQUFPRixFQUFHRSxLQURsQkgsR0FRSkksWUFBYSxTQUFTSCxHQUVsQixHQUFJSSxHQUFxQkosRUFBR0ssdUJBTzVCLE9BTEFQLGNBQWFNLEdBQWJOLE1BQUFBLEVBQWFNLE1BQW9CQSxFQUFBRSxLQUM3QkMsT0FBT0gsRUFBbUJJLE9BQVFKLEVBQW1CRSxNQUlsREYsR0FJWEssZ0JBQWlCLFNBQUFDLEdBQ2IsTUFBT0MsT0FBTUMsVUFBVUMsTUFBTUMsS0FBS0o7WUN4QzFDLFNBQVNLLGlCQUNMLE1BQU8zQixXQUFVcUIsZ0JBQWdCdkIsR0FBRyxVQUN2QyxRQUFBOEIsa0JBQUFoQixHQUdHQSxFQUFHaUIsT0FBUyxFQURoQmpCLEVBQUFrQixPQUFTRixFQUNMaEIsV0FBQSxXQUNHa0IsRUFBQUEsT0FBSCxFQUNBQyxFQUFBQSxPQUFXLEdBQ1BuQixLQUNBQSxXQUFHa0IsV0FDSmxCLEVBSEhpQixPQUFBLEVBSUFFLEVBQUFBLE9BQVcsR0FDUG5CLEtBR1AsUUFBQW9CLGtCQUFBcEIsR0FHR2dCLGlCQUFpQmhCLEdBRHJCbUIsV0FBU0MsV0FDTEosRUFBQUEsUUFDQUcsRUFBQUEsT0FBVyxHQUNQbkIsS0FHUCxRQUFBcUIsbUJBQUFDLEdBR09BLEVBQVFDLFNBQVUsR0FEMUJSLGdCQUFTTSxRQUFrQkMsU0FBQUEsR0FDbkJBLE9BQVFDLEVBQVJDLFVBQ0pULElBQUFBLEdBQ1lPLGlCQUFSdEIsRUFDSSxNQUNJZ0IsS0FBQUEsR0FDQUksaUJBQUFwQixNQU1mLFFBQUF5QixZQUFBQyxFQUFBQyxFQUFBQyxHQUdHLEdBQUlMLEdBQUFBLE9BRFJDLEVBQUFBLE1BRVFBLFVBQUFBLEdBQUpLLFNBQUFGLEdBQUFFLFNBQUFELEdBR0lMLEVBQVVHLEVBQVFJLHdCQUF5Qm5CLFFBQVNlLEVBQVFJLGNBQWNDLFFBQVFoRCxTQUFTaUQsUUFEM0ZOLEVBQUFBLEVBQVlHLFNBRVpMLG1CQUdJRCxRQUFTQSxFQURiRixTQUFBQSxLQUFrQlksT0FBbEJDLFFBQUFDLEtBQUFDLEtBSUdaLFNBQUEsRUFDSFMsa0JBQ0lULFNBQUFBLEdBQ0FNLEVBQUFBLEVBQWVBLHdCQUFBbkIsUUFBQTBCLEVBQUFQLGNBQUFDLFFBQUFoRCxTQUFBaUQsUUFDaEJSLEVBQUFhLEVBQVViLFNBRVRBLG1CQUdJRCxRQUFTQSxFQURiRixTQUFBQSxNQVNadEMsU0FBQWMsaUJBQUEsbUJBQUE0QixZQUNBMUMsT0FBQUEsaUJBQVNjLE9BQWlCLFdBQzFCeUMsV0FBT3pDLFdBQWlCLE9BSXhCb0MsT0FBQU0sUUFBQUMsVUFBQUMsWUFBQWhCIiwiZmlsZSI6ImpzL2luamVjdGVkLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciAkID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvci5iaW5kKGRvY3VtZW50KSxcbiAgICAkJCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwuYmluZChkb2N1bWVudCk7XG5cbnZhciBNdXRlVXRpbHMgPSB7XG5cbiAgICBldmVudEFkZGVyOiBmdW5jdGlvbihzZWxlY3RvciwgZXZlbnROYW1lLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgdGFyZ2V0cyA9ICQkKHNlbGVjdG9yKSB8fCBbXSxcbiAgICAgICAgICAgIHRMZW5ndGggPSB0YXJnZXRzLmxlbmd0aDtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRMZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGFyZ2V0c1tpXS5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgY2FsbGJhY2spO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRhcmdldHM7XG4gICAgfSxcblxuICAgIGV4dGVuZE9iamVjdDogZnVuY3Rpb24ob2JqLCBlbCkge1xuXG4gICAgICAgIE9iamVjdC5rZXlzKGVsKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuICAgICAgICAgICAgb2JqW2tleV0gPSBlbFtrZXldO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gb2JqO1xuXG4gICAgfSxcblxuICAgIGdldExvY2F0aW9uOiBmdW5jdGlvbihlbCkge1xuXG4gICAgICAgIHZhciBib3VuZGluZ0NsaWVudFJlY3QgPSBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgICBleHRlbmRPYmplY3QoYm91bmRpbmdDbGllbnRSZWN0LCB7XG4gICAgICAgICAgICB3aWR0aDogYm91bmRpbmdDbGllbnRSZWN0LnJpZ2h0IC0gYm91bmRpbmdDbGllbnRSZWN0LmxlZnQsXG4gICAgICAgICAgICBoZWlnaHQ6IGJvdW5kaW5nQ2xpZW50UmVjdC5ib3R0b20gLSBib3VuZGluZ0NsaWVudFJlY3QudG9wXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBib3VuZGluZ0NsaWVudFJlY3Q7XG5cbiAgICB9LFxuXG4gICAgbm9kZUxpc3RUb0FycmF5OiBmdW5jdGlvbihub2RlTGlzdCkge1xuICAgICAgICByZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwobm9kZUxpc3QpO1xuICAgIH1cblxufTtcbiIsImZ1bmN0aW9uIGdldE11dGVWaWRlb3MoKSB7XG4gICAgcmV0dXJuIE11dGVVdGlscy5ub2RlTGlzdFRvQXJyYXkoJCQoXCJ2aWRlb1wiKSk7XG59XG5cbmZ1bmN0aW9uIG11dGVWaWRlb0VsZW1lbnQoZWwpIHtcbiAgICBlbC52b2x1bWUgPSAwO1xuICAgIGVsLm11dGVkID0gdHJ1ZTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgZWwudm9sdW1lID0gMDtcbiAgICAgICAgZWwubXV0ZWQgPSB0cnVlO1xuICAgIH0sIDUwMCk7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGVsLnZvbHVtZSA9IDA7XG4gICAgICAgIGVsLm11dGVkID0gdHJ1ZTtcbiAgICB9LCAxMDAwKTtcbn1cblxuZnVuY3Rpb24gc3RvcFZpZGVvRWxlbWVudChlbCkge1xuICAgIG11dGVWaWRlb0VsZW1lbnQoZWwpO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBlbC5wYXVzZSgpO1xuICAgICAgICBlbC52b2x1bWUgPSAxO1xuICAgIH0sIDUwMCk7XG59XG5cbmZ1bmN0aW9uIHNldHRpbmdzVG9BY3Rpb25zKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucy53aWxsUnVuID4gLTEpIHJldHVybjtcbiAgICBnZXRNdXRlVmlkZW9zKCkuZm9yRWFjaChlbCA9PiB7XG4gICAgICAgIHN3aXRjaCAob3B0aW9ucy5tdXRlTW9kZSkge1xuICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgIG11dGVWaWRlb0VsZW1lbnQoZWwpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgIHN0b3BWaWRlb0VsZW1lbnQoZWwpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIHByb2Nlc3NET00ocmVxdWVzdCwgc2VuZGVyLCByZXNwb25zZSkge1xuICAgIGxldCB3aWxsUnVuO1xuICAgIGxldCBtdXRlTW9kZTtcblxuICAgIGlmIChyZXF1ZXN0ICE9PSB1bmRlZmluZWQgJiYgc2VuZGVyICE9PSB1bmRlZmluZWQgJiYgcmVzcG9uc2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB3aWxsUnVuID0gcmVxdWVzdC5leGVtcHREb21haW5zIGluc3RhbmNlb2YgQXJyYXkgJiYgcmVxdWVzdC5leGVtcHREb21haW5zLmluZGV4T2YoZG9jdW1lbnQuZG9tYWluKTtcbiAgICAgICAgbXV0ZU1vZGUgPSByZXF1ZXN0Lm11dGVNb2RlO1xuXG4gICAgICAgIHNldHRpbmdzVG9BY3Rpb25zKHtcbiAgICAgICAgICAgIHdpbGxSdW46IHdpbGxSdW4sXG4gICAgICAgICAgICBtdXRlTW9kZTogbXV0ZU1vZGVcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5nZXQoe1xuICAgICAgICAgICAgbXV0ZU1vZGU6IDAsXG4gICAgICAgICAgICBleGVtcHREb21haW5zOiBbXVxuICAgICAgICB9LCByZWNvcmQgPT4ge1xuICAgICAgICAgICAgd2lsbFJ1biA9IHJlY29yZC5leGVtcHREb21haW5zIGluc3RhbmNlb2YgQXJyYXkgJiYgcmVjb3JkLmV4ZW1wdERvbWFpbnMuaW5kZXhPZihkb2N1bWVudC5kb21haW4pO1xuICAgICAgICAgICAgbXV0ZU1vZGUgPSByZWNvcmQubXV0ZU1vZGU7XG5cbiAgICAgICAgICAgIHNldHRpbmdzVG9BY3Rpb25zKHtcbiAgICAgICAgICAgICAgICB3aWxsUnVuOiB3aWxsUnVuLFxuICAgICAgICAgICAgICAgIG11dGVNb2RlOiBtdXRlTW9kZVxuICAgICAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG5cbn1cblxuLy8gd2FpdCBmb3IgRE9NIHRvIGJlIHBhcnNlZFxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIHByb2Nlc3NET00pO1xud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XG4gICAgc2V0VGltZW91dChwcm9jZXNzRE9NLCAxMDAwKTtcbn0pO1xuXG4vLyBhd2FpdCBtZXNzYWdlIGZyb20gbWFpbiB0aHJlYWQgb2YgcG9wdXBcbmNocm9tZS5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lcihwcm9jZXNzRE9NKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
